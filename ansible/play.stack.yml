  # THIS PLAYBOOK COMMANDS THE DOCKER SWARM MANAGER NODE TO APPLY
  # THE STACK FILE ("docker-compose.prod.yml") COPIED BY THE 
  # "play.copyfiles.yml" PLAYBOOK ON THE WORKER NODES
  ### ---
  # THE EXECUTION OF THIS PLAYBOOK REQUIRES 
- hosts: manager 
  # GIVE THE PRIVILEGED PERMISSION TO ANSIBLE
  become: yes 
  # TO NOT COLLECT & DEBUG USELESS DATA (optimize time)
  gather_facts: no 

  vars: 
    # DEFINE THE PYTHON INTERPRETER FOLDER IN THE CONTROLLER NODE OF ANSIBLE
    ansible_python_interpreter: /usr/bin/python3 

  tasks: 
    # THIS TASK DECRYPTS AND LOADS VARIABLES THAT ARE STORED IN VAULT FILE
    # THE VAULT FILE IS CALLED "vault.yml" WE MENTIONNED IT BY THE ATTRIBUT "file" 
#  - name: include vault
#    ansible.builtin.include_vars:
      # DEFINE THE VAULT FILE ("vault.yml")
#      file: vault.yml

  - name: log to private registry
    # USINGE DOCKER LOGIN SSH-CMD FROM "community.docker" MODULE
    # LOGIN TO OUR PRIVATE IMAGE REGISTRY (JFROG)
    docker_login:
      registry: "https://registry-1.docker.io/v2/"
      # CALLING FOR THE VAR "registry_usr" STORED IN THE VAULT FILE TO
      # USE IT AS AUTH FOR REGISTRY
      username: "hananeraib"
      # CALLING FOR THE VAR "registry_pwd" STORED IN THE VAULT FILE TO
      # USE IT AS AUTH FOR REGISTRY
      password: "hanane0602@"

  - name: deploy a stack
    # USING DOCKER STACK MODULE TO RUN A DOCKER COMPOSE AS A DOCKER STACK
    # FOR DOCKER SWARM CLUSTER
    docker_stack:
      # TELL THE MANAGER NODE TO DEPLOY THE STACK ON THE CLUSTER BASED
      # ON WHAT CONTAIN THE FILE "docker-compose.prod.yml" AS RULES OF 
      # DEPLOYMENT
      state: present
      # GIVE THE SWARM STACK A NAME ("pfeblog")
      name: pfeblog
      # DEFINE THE SWARM's STACK FILE (THE DOCKER COMPOSE FILE)
      compose:
        - /home/hanane/PFE-project/lab_migration_k8s/docker-compose.prod.yml
      # SEND AUTHENTICATION DETAILS TO SWARM AGENTS
      with_registry_auth: yes
