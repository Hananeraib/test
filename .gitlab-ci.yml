image: docker:20.10.16
variables:
  DOCKER_TLS_CERTDIR: ""
services:
  - name: docker:dind
    #Add our registry to insecure registry group
    command: ["--insecure-registry=vps-da62cdaf.vps.ovh.net:8082"]
default:
  tags:
    - docker

stages:
  - build
  - deploy

build_backend:
  stage: build
  before_script:
  - docker login -u $REGISTRY_USERNAME -p "$REGISTRY_PASSWORD" vps-da62cdaf.vps.ovh.net:8082/artifactory/pfeblog/
  script:
    - cd ./django
    - docker build -t vps-da62cdaf.vps.ovh.net:8082/pfeblog/backend:latest -t vps-da62cdaf.vps.ovh.net:8082/pfeblog/backend:$CI_COMMIT_TAG
    - docker push vps-da62cdaf.vps.ovh.net:8082/pfeblog/backend:latest 
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
      changes:
        - django/**/* 

build_frontend:
  stage: build
  before_script:
  - docker login -u $REGISTRY_USERNAME -p "$REGISTRY_PASSWORD" vps-da62cdaf.vps.ovh.net:8082/artifactory/pfeblog/
  script:
    - cd ./react/blogapi
    - docker build -t vps-da62cdaf.vps.ovh.net:8082/pfeblog/frontend:latest -t vps-da62cdaf.vps.ovh.net:8082/pfeblog/frontend:$CI_COMMIT_TAG 
    - docker push vps-da62cdaf.vps.ovh.net:8082/pfeblog/frontend:latest 
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
      changes:
        - react/blogapi/**/* 

deploy:
  stage: deploy
  tags:
    - ansible
  script:
    - ansible --version
    - ansible-playbook copydockercompose.yml
    - ansible-playbook production.play.yml
  when: manual
  allow_failure: false  #To no skip the first stages and not run when there's a failure
  only:
    - dev